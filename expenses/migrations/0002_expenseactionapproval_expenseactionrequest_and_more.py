# Generated by Django 5.2.4 on 2025-10-07 10:25

import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("expenses", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ExpenseActionApproval",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name="ExpenseActionRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[("delete", "Delete"), ("edit", "Edit")], max_length=16
                    ),
                ),
                ("payload", models.JSONField(blank=True, null=True)),
                ("required_count", models.PositiveIntegerField()),
                ("is_completed", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name="ExpenseItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=3, default=Decimal("1.000"), max_digits=12
                    ),
                ),
                ("unit_price_minor", models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="ExpenseItemShare",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("amount_minor", models.BigIntegerField(blank=True, null=True)),
                (
                    "weight",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=12, null=True
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="attachment",
            name="is_receipt",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="expense",
            name="breakdown_method",
            field=models.CharField(
                blank=True,
                choices=[
                    ("equally", "Equally"),
                    ("unequally", "Unequally"),
                    ("shares", "By shares"),
                ],
                help_text="Applies only when calc_mode=TOTAL",
                max_length=10,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="expense",
            name="calc_mode",
            field=models.CharField(
                choices=[("TOTAL", "Total only"), ("ITEMIZED", "Itemized")],
                default="TOTAL",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="recurringexpensetemplate",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="expense",
            name="description",
            field=models.CharField(blank=True, default="", max_length=255),
        ),
        migrations.AddConstraint(
            model_name="attachment",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_receipt", True)),
                fields=("expense",),
                name="unique_receipt_per_expense",
            ),
        ),
        migrations.AddField(
            model_name="expenseactionapproval",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="expense_action_approvals",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="expenseactionrequest",
            name="expense",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="action_requests",
                to="expenses.expense",
            ),
        ),
        migrations.AddField(
            model_name="expenseactionrequest",
            name="requested_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="expense_action_requests",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="expenseactionapproval",
            name="request",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="approvals",
                to="expenses.expenseactionrequest",
            ),
        ),
        migrations.AddField(
            model_name="expenseitem",
            name="expense",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="items",
                to="expenses.expense",
            ),
        ),
        migrations.AddField(
            model_name="expenseitemshare",
            name="item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shares",
                to="expenses.expenseitem",
            ),
        ),
        migrations.AddField(
            model_name="expenseitemshare",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddIndex(
            model_name="expenseactionrequest",
            index=models.Index(
                fields=["expense", "action", "is_completed"],
                name="expenses_ex_expense_04c5cb_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="expenseactionapproval",
            unique_together={("request", "user")},
        ),
        migrations.AddIndex(
            model_name="expenseitem",
            index=models.Index(
                fields=["expense"], name="expenses_ex_expense_8267e5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="expenseitemshare",
            index=models.Index(
                fields=["item", "user"], name="expenses_ex_item_id_08c546_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="expenseitemshare",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("amount_minor__isnull", False), ("weight__isnull", True)),
                    models.Q(("amount_minor__isnull", True), ("weight__isnull", False)),
                    _connector="OR",
                ),
                name="itemshare_either_amount_or_weight",
            ),
        ),
    ]
